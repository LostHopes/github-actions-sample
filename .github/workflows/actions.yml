name: CI Workflow

on:
  push:
    branches:
      - main
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.ref == "refs/heads/main"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Convert repository owner to lowercase
        id: lowercase_owner
        uses: vishalmamidi/lowercase-action@v1
        with:
          string: ${{ github.repository_owner }}

      - name: Convert repository and owner name to lowercase
        id: lowercase_name
        uses: vishalmamidi/lowercase-action@v1
        with:
          string: ${{ github.event.repository.name }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ghcr.io/${{ steps.lowercase_owner.outputs.lowercase }}/${{ steps.lowercase_name.outputs.lowercase }}:${{ github.sha }}

      - name: Save Docker image
        run: |
          mkdir -p reports
          docker save -o reports/build.tar ghcr.io/${{ steps.lowercase_owner.outputs.lowercase }}/${{ steps.lowercase_name.outputs.lowercase }}:${{ github.sha }}

      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-artifact
          path: reports/build.tar

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff

      - name: Run Ruff Linter
        run: |
          ruff check . --output-format json --output-file reports/lint.json

      - name: Upload lint artifact
        uses: actions/upload-artifact@v3
        with:
          name: lint-artifact
          path: reports/lint.json

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python for testing
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies for testing
        run: |
          python -m venv .env
          source .env/bin/activate
          pip install --upgrade pip
          pip install poetry
          poetry install --with dev

      - name: Run tests
        run: |
          mkdir -p reports
          source .env/bin/activate
          pytest --cov-report html:reports/tests

      - name: Upload test artifacts
        uses: actions/upload-artifact@v3
        with:
          name: test-artifacts
          path: reports/tests/*
