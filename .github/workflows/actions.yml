name: CI Workflow

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ github.repository }}:${{ github.sha }}

    - name: Save Docker image
      run: |
        mkdir -p reports
        docker save -o reports/build.tar ${{ github.repository }}:${{ github.sha }}

    - name: Upload build artifact
      uses: actions/upload-artifact@v3
      with:
        name: build-artifact
        path: reports/build.tar

  lint:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m venv .env
        source .env/bin/activate
        pip install --upgrade pip
        pip install poetry
        poetry install --with dev

    - name: Run linter
      run: |
        mkdir -p reports
        ruff check . --output-format json --output-file reports/lint.json

    - name: Upload lint artifact
      uses: actions/upload-artifact@v3
      with:
        name: lint-artifact
        path: reports/lint.json

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m venv .env
        source .env/bin/activate
        pip install --upgrade pip
        pip install poetry
        poetry install --with dev

    - name: Run tests
      run: |
        mkdir -p reports
        pytest --cov-report html:reports/tests

    - name: Upload test artifacts
      uses: actions/upload-artifact@v3
      with:
        name: test-artifacts
        path: reports/tests/*